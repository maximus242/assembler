%%%% Starting test create-section-headers tests
Group begin: create-section-headers tests
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 79
  source-form: (test-equal (* 6 64) (bytevector-length test-headers))
Test end:
  result-kind: pass
  actual-value: 384
  expected-value: 384
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 1
  expected-value: 1
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 1
  expected-value: 1
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 6
  expected-value: 6
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 4096
  expected-value: 4096
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 4096
  expected-value: 4096
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 1000
  expected-value: 1000
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 16
  expected-value: 16
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 7
  expected-value: 7
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 1
  expected-value: 1
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 3
  expected-value: 3
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: fail
  actual-value: 5096
  expected-value: 8192
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: fail
  actual-value: 5096
  expected-value: 8192
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 500
  expected-value: 500
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 8
  expected-value: 8
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 13
  expected-value: 13
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 2
  expected-value: 2
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: fail
  actual-value: 9692
  expected-value: 8704
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 200
  expected-value: 200
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 4
  expected-value: 4
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 5
  expected-value: 5
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 8
  expected-value: 8
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 24
  expected-value: 24
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 21
  expected-value: 21
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 3
  expected-value: 3
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: fail
  actual-value: 9892
  expected-value: 8960
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 300
  expected-value: 300
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 1
  expected-value: 1
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 29
  expected-value: 29
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 3
  expected-value: 3
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: fail
  actual-value: 10192
  expected-value: 9216
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 100
  expected-value: 100
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 1
  expected-value: 1
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 108
  source-form: (test-equal (* 6 64) (bytevector-length large-headers))
Test end:
  result-kind: pass
  actual-value: 384
  expected-value: 384
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 7
  expected-value: 7
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 1
  expected-value: 1
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 3
  expected-value: 3
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 14096
  expected-value: 14096
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 14096
  expected-value: 14096
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 5000
  expected-value: 5000
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 8
  expected-value: 8
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Test begin:
  source-file: "test-elf-header.scm"
  source-line: 67
  source-form: (test-equal value (bytevector-u32-ref headers (+ offset (* index 4)) (endianness little)))
Test end:
  result-kind: pass
  actual-value: 0
  expected-value: 0
Group end: create-section-headers tests
# of expected passes      97
# of unexpected failures  5
